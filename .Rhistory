"size": 0
}
}
}
}')
}
# single search term querys
for(term in basic_search_term_vector) {
query_list[[term]] <- paste0('{
"query": {
"filtered": {
"filter": {
"term": {"pdf_text_string": "',term,'"}
}
}
},
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}')
}
rm(term)
# #Iraq + Environment
# years <- c(1950:2015)
# aggs <- '{
#           "query": {
#             "filtered": {
#               "filter": {
#                 "term": {"resource": "hydrocarbons"}
#               }
#             }
#           }
#         }'
# #How many contracts are digitised?
# aggs <-
# '{
#   "aggs" : {
#     "without_text" : {
#       "missing" : { "field" : "pdf_text_string" }
#     }
#   }
# }'
#
# missing <- Search( index = "rc_nrgi1", type = "master", body = aggs )$aggregations
# #How many Oil+Gas?
# Search(index = "rc_nrgi1", type = "master", q = "resource:hydrocarbons")$hits$total
# Search(index = "rc_nrgi1", type = "master", q = "resource:oil")$hits$total
# Search(index = "rc_nrgi1", type = "master", q = "resource:gas")$hits$total
#etc.
# API CALL
print('Sending query...')
response_list <- list()
for (i in names(query_list)) {
response_list[[paste('response_', i, sep='')]] <- Search(index=index, type=type, body=query_list[[i]])
}
rm(basic_search_term_vector, type, index, query_list)
# ETL
# Totals df
totals_df <- data.frame('totals',response_list[["response_yearly_total"]]$hits$total)
colnames(totals_df) <- c('var','val')
totals_df <- rbind(totals_df, data.frame(var='total years', val=length(response_list[["response_yearly_total"]]$aggregations$year_agg$buckets)))
totals_df <- rbind(totals_df, data.frame(var='total hydrocarbons', val=response_list[["response_hydrocarbons"]]$hits$total))
totals_df <- rbind(totals_df, data.frame(var='total oil', val=response_list[["response_oil"]]$hits$total))
totals_df <- rbind(totals_df, data.frame(var='total gas', val=response_list[["response_gas"]]$hits$total))
# Yearly stats
total_years <- length(response_list[["response_yearly_total"]]$aggregations$year_agg$buckets)
years <- vector()
total <- vector()
for (i in 1:total_years) {
years <- c(years,response_list[["response_yearly_total"]]$aggregations$year_agg$buckets[[i]]$key)
total <- c(total,response_list[["response_yearly_total"]]$aggregations$year_agg$buckets[[i]]$doc_count)
# print(response$aggregations$year_agg$buckets[[i]])
}
yearly_df <- data.frame(years, total)
yearly_df <- yearly_df[order(years),]
rm(i, total, years)
response_vector <- names(response_list)[names(response_list) != "response_yearly_total"]
for(res in response_vector) {
res_tot_years <-  length(response_list[[res]]$aggregations$year_agg$buckets)
res_years <- vector()
res_total <- vector()
for(i in 1:res_tot_years) {
res_years <- c(res_years, response_list[[res]]$aggregations$year_agg$buckets[[i]]$key)
res_total <- c(res_total,response_list[[res]]$aggregations$year_agg$buckets[[i]]$doc_count)
}
res_df <- data.frame(res_years, res_total)
colnames(res_df) <- c('years', res)
yearly_df <- merge(yearly_df, res_df, by="years", all=TRUE)
# yearly_df[is.na(yearly_df)] <- 0
yearly_df[paste0(res,'_perc')] <- yearly_df[res] / yearly_df["total"]
rm(i, res_tot_years, res_years, res_total, res_df)
}
rm(res)
yearly_df$years <- as.Date(paste0(yearly_df$years, '-1-1'), '%Y-%m-%d')
rm(test)
rm(resource_term_vector)
rm(total_years)
print('Printing resource type plots...')
#create aggregation of total monthly deploytments
resource_tmp_perc <- yearly_df[,c('years' ,'response_hydrocarbons_perc','response_oil_perc','response_gas_perc')]
colnames(resource_tmp_perc) <- c('Year', 'Hydrocarbons percentage', 'Oil percentage', 'Gas percentage')
resource_tmp_perc <- melt(resource_tmp_perc, id.vars='Year')
resource_tmp_perc$variable <- as.character(resource_tmp_perc$variable)
resource_tmp_perc$variable <- as.factor(resource_tmp_perc$variable)
resource_tmp_perc$variable <- factor(resource_tmp_perc$variable,levels=c('Hydrocarbons percentage','Oil percentage','Gas percentage'),ordered=TRUE)
# Plot monthly totals
line_resources_perc <- ggplot(resource_tmp_perc, aes(Year,value))
line_resources_perc <- line_resources_perc +
geom_bar(aes(color=variable, fill=variable)) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),legend.position="bottom",axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = 'Contracts by resource type ',x='Year',y='Percentage total contracts',fill='Type',color='Type') +
scale_x_date(labels = date_format("%Y"), breaks = date_breaks("5 year")) +
scale_y_continuous(labels = percent)
colors <- brewer.pal(name="Set2", n=nlevels(resource_tmp_perc$variable))
names(colors) _perc<- rev(levels(resource_tmp_perc$variable))
line_resources_perc <- line_resources_perc + scale_fill_manual(values=colors) + scale_color_manual(values=colors)
# Plot monthly totals
line_resources_perc <- ggplot(resource_tmp_perc, aes(Year,value))
line_resources_perc <- line_resources_perc +
geom_bar(aes(color=variable, fill=variable)) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),legend.position="bottom",axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = 'Contracts by resource type ',x='Year',y='Percentage total contracts',fill='Type',color='Type') +
scale_x_date(labels = date_format("%Y"), breaks = date_breaks("5 year")) +
scale_y_continuous(labels = percent)
colors <- brewer.pal(name="Set2", n=nlevels(resource_tmp_perc$variable))
names(colors) <- rev(levels(resource_tmp_perc$variable))
line_resources_perc <- line_resources_perc + scale_fill_manual(values=colors) + scale_color_manual(values=colors)
ggsave(line_resources_perc,file='./plots/line_resources_perc.pdf',height=8.5,width=11)
rm(resource_tmp_perc, line_resources_perc)
resource_tmp_perc <- yearly_df[,c('years' ,'response_hydrocarbons_perc','response_oil_perc','response_gas_perc')]
colnames(resource_tmp_perc) <- c('Year', 'Hydrocarbons percentage', 'Oil percentage', 'Gas percentage')
resource_tmp_perc <- melt(resource_tmp_perc, id.vars='Year')
resource_tmp_perc$variable <- as.character(resource_tmp_perc$variable)
resource_tmp_perc$variable <- as.factor(resource_tmp_perc$variable)
resource_tmp_perc$variable <- factor(resource_tmp_perc$variable,levels=c('Hydrocarbons percentage','Oil percentage','Gas percentage'),ordered=TRUE)
# Plot monthly totals
line_resources_perc <- ggplot(resource_tmp_perc, aes(Year,value))
line_resources_perc <- line_resources_perc +
geom_line(aes(color=variable, fill=variable, order=desc(variable)), size=1.5) +
theme_bw() +
theme(plot.title = element_text(size = rel(2)),legend.position="bottom",axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = 'Contracts by resource type ',x='Year',y='Percentage total contracts',fill='Type',color='Type') +
scale_x_date(labels = date_format("%Y"), breaks = date_breaks("5 year")) +
scale_y_continuous(labels = percent)
colors <- brewer.pal(name="Set2", n=nlevels(resource_tmp_perc$variable))
names(colors) <- rev(levels(resource_tmp_perc$variable))
line_resources_perc <- line_resources_perc + scale_fill_manual(values=colors) + scale_color_manual(values=colors)
ggsave(line_resources_perc,file='./plots/line_resources_perc.pdf',height=8.5,width=11)
rm(resource_tmp_perc, line_resources_perc)
response_list[["response_hydrocarbons"]]
names(response_list[["response_hydrocarbons"]])
names(response_list[["response_hydrocarbons"]]$aggregations)
names(response_list[["response_hydrocarbons"]]$aggregations$year_agg)
names(response_list[["response_hydrocarbons"]]$aggregations$year_agg$sum_other_doc_count)
response_list[["response_hydrocarbons"]]$aggregations$year_agg$sum_other_doc_count
test <- require(elastic)
if(test == FALSE) install.packages("elastic")
require(elastic)
test <- require(ggplot2)
if(test == FALSE) install.packages("ggplot2")
require(ggplot2)
test <- require(scales)
if(test == FALSE) install.packages("scales")
require(scales)
test <- require(RColorBrewer)
if(test == FALSE) install.packages("RColorBrewer")
require(RColorBrewer)
rm(test)
test <- require(reshape)
if(test == FALSE) install.packages("reshape")
require(reshape)
test <- require(plyr)
if(test == FALSE) install.packages("plyr")
require(plyr)
# test <- require()
# if(test == FALSE) install.packages("")
# require()
rm(test)
connect(es_base = "https://search-rc-elasticsearch-cluster-zhtfwjechy4noqdtqablbofcxi.us-east-1.es.amazonaws.com", es_port = "")
# BASE QUERY SETTINGS
type <- 'master'
index <-'rc_nrgi1'
# QUERY BUILDER
query_list <- list()
basic_search_term_vector <- c('environment', 'consent', 'resettlement', 'consultation', 'arbitration', 'renegotiation', 'confidentiality')
multi_search_term_vector <- c('')
resource_term_vector <- c('hydrocarbons','oil','gas')
names(query_list)
# base query
query_list[['yearly_total']] <- '{
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}'
# resource type query
for(term in resource_term_vector) {
query_list[[term]] <- paste0('{
"query": {
"filtered": {
"filter": {
"term": {"resource": "',term,'"}
}
}
},
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}')
}
query_list[['other_resource']] <- '{
"query": {
"filtered": {
"filter": {
"bool" {
"must_not": [
{"term": {"resource": "hydrocarbons"}},
{"term": {"resource": "oil"}},
{"term": {"resource": "gas"}}
]
}
}
}
},
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}'
# single search term querys
for(term in basic_search_term_vector) {
query_list[[term]] <- paste0('{
"query": {
"filtered": {
"filter": {
"term": {"pdf_text_string": "',term,'"}
}
}
},
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}')
}
rm(term)
# #Iraq + Environment
# years <- c(1950:2015)
# aggs <- '{
#           "query": {
#             "filtered": {
#               "filter": {
#                 "term": {"resource": "hydrocarbons"}
#               }
#             }
#           }
#         }'
# #How many contracts are digitised?
# aggs <-
# '{
#   "aggs" : {
#     "without_text" : {
#       "missing" : { "field" : "pdf_text_string" }
#     }
#   }
# }'
#
#etc.
# API CALL
print('Sending query...')
response_list <- list()
for (i in names(query_list)) {
response_list[[paste('response_', i, sep='')]] <- Search(index=index, type=type, body=query_list[[i]])
}
rm(basic_search_term_vector, resource_term_vector, type, index, query_list)
# ETL
# Totals df
totals_df <- data.frame('totals',response_list[["response_yearly_total"]]$hits$total)
colnames(totals_df) <- c('var','val')
totals_df <- rbind(totals_df, data.frame(var='total years', val=length(response_list[["response_yearly_total"]]$aggregations$year_agg$buckets)))
totals_df <- rbind(totals_df, data.frame(var='total hydrocarbons', val=response_list[["response_hydrocarbons"]]$hits$total))
totals_df <- rbind(totals_df, data.frame(var='total oil', val=response_list[["response_oil"]]$hits$total))
totals_df <- rbind(totals_df, data.frame(var='total gas', val=response_list[["response_gas"]]$hits$total))
# Yearly stats
total_years <- length(response_list[["response_yearly_total"]]$aggregations$year_agg$buckets)
years <- vector()
total <- vector()
for (i in 1:total_years) {
years <- c(years,response_list[["response_yearly_total"]]$aggregations$year_agg$buckets[[i]]$key)
total <- c(total,response_list[["response_yearly_total"]]$aggregations$year_agg$buckets[[i]]$doc_count)
# print(response$aggregations$year_agg$buckets[[i]])
}
yearly_df <- data.frame(years, total)
yearly_df <- yearly_df[order(years),]
rm(i, total, years, total_years)
response_vector <- names(response_list)[names(response_list) != "response_yearly_total"]
for(res in response_vector) {
res_tot_years <-  length(response_list[[res]]$aggregations$year_agg$buckets)
res_years <- vector()
res_total <- vector()
for(i in 1:res_tot_years) {
res_years <- c(res_years, response_list[[res]]$aggregations$year_agg$buckets[[i]]$key)
res_total <- c(res_total,response_list[[res]]$aggregations$year_agg$buckets[[i]]$doc_count)
}
res_df <- data.frame(res_years, res_total)
colnames(res_df) <- c('years', res)
yearly_df <- merge(yearly_df, res_df, by="years", all=TRUE)
yearly_df[paste0(res,'_perc')] <- yearly_df[res] / yearly_df["total"]
rm(i, res_tot_years, res_years, res_total, res_df)
}
rm(res)
yearly_df$years <- as.Date(paste0(yearly_df$years, '-1-1'), '%Y-%m-%d')
View(yearly_df)
View(yearly_df)
test <- require(elastic)
if(test == FALSE) install.packages("elastic")
require(elastic)
test <- require(ggplot2)
if(test == FALSE) install.packages("ggplot2")
require(ggplot2)
test <- require(scales)
if(test == FALSE) install.packages("scales")
require(scales)
test <- require(RColorBrewer)
if(test == FALSE) install.packages("RColorBrewer")
require(RColorBrewer)
rm(test)
test <- require(reshape)
if(test == FALSE) install.packages("reshape")
require(reshape)
test <- require(plyr)
if(test == FALSE) install.packages("plyr")
require(plyr)
# test <- require()
# if(test == FALSE) install.packages("")
# require()
rm(test)
connect(es_base = "https://search-rc-elasticsearch-cluster-zhtfwjechy4noqdtqablbofcxi.us-east-1.es.amazonaws.com", es_port = "")
# BASE QUERY SETTINGS
type <- 'master'
index <-'rc_nrgi1'
# QUERY BUILDER
query_list <- list()
basic_search_term_vector <- c('environment', 'consent', 'resettlement', 'consultation', 'arbitration', 'renegotiation', 'confidentiality')
multi_search_term_vector <- c('')
resource_term_vector <- c('hydrocarbons','oil','gas')
names(query_list)
# base query
query_list[['yearly_total']] <- '{
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}'
# resource type query
for(term in resource_term_vector) {
query_list[[term]] <- paste0('{
"query": {
"filtered": {
"filter": {
"term": {"resource": "',term,'"}
}
}
},
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}')
}
query_list[['other_resource']] <- '{
"query": {
"filtered": {
"filter": {
"bool" {
"must_not": [
{"term": {"resource": "hydrocarbons"}},
{"term": {"resource": "oil"}},
{"term": {"resource": "gas"}}
]
}
}
}
},
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}'
# single search term querys
for(term in basic_search_term_vector) {
query_list[[term]] <- paste0('{
"query": {
"filtered": {
"filter": {
"term": {"pdf_text_string": "',term,'"}
}
}
},
"aggregations": {
"year_agg": {
"terms": {
"field": "signature_year",
"size": 0
}
}
}
}')
}
rm(term)
# #Iraq + Environment
# years <- c(1950:2015)
# aggs <- '{
#           "query": {
#             "filtered": {
#               "filter": {
#                 "term": {"resource": "hydrocarbons"}
#               }
#             }
#           }
#         }'
# #How many contracts are digitised?
# aggs <-
# '{
#   "aggs" : {
#     "without_text" : {
#       "missing" : { "field" : "pdf_text_string" }
#     }
#   }
# }'
#
#etc.
# API CALL
print('Sending query...')
response_list <- list()
for (i in names(query_list)) {
response_list[[paste('response_', i, sep='')]] <- Search(index=index, type=type, body=query_list[[i]])
}
rm(basic_search_term_vector, resource_term_vector, type, index, query_list)
# ETL
# Totals df
totals_df <- data.frame('totals',response_list[["response_yearly_total"]]$hits$total)
colnames(totals_df) <- c('var','val')
totals_df <- rbind(totals_df, data.frame(var='total years', val=length(response_list[["response_yearly_total"]]$aggregations$year_agg$buckets)))
totals_df <- rbind(totals_df, data.frame(var='total hydrocarbons', val=response_list[["response_hydrocarbons"]]$hits$total))
totals_df <- rbind(totals_df, data.frame(var='total oil', val=response_list[["response_oil"]]$hits$total))
totals_df <- rbind(totals_df, data.frame(var='total gas', val=response_list[["response_gas"]]$hits$total))
# Yearly stats
total_years <- length(response_list[["response_yearly_total"]]$aggregations$year_agg$buckets)
years <- vector()
total <- vector()
for (i in 1:total_years) {
years <- c(years,response_list[["response_yearly_total"]]$aggregations$year_agg$buckets[[i]]$key)
total <- c(total,response_list[["response_yearly_total"]]$aggregations$year_agg$buckets[[i]]$doc_count)
# print(response$aggregations$year_agg$buckets[[i]])
}
yearly_df <- data.frame(years, total)
yearly_df <- yearly_df[order(years),]
rm(i, total, years, total_years)
response_vector <- names(response_list)[names(response_list) != "response_yearly_total"]
for(res in response_vector) {
res_tot_years <-  length(response_list[[res]]$aggregations$year_agg$buckets)
res_years <- vector()
res_total <- vector()
for(i in 1:res_tot_years) {
res_years <- c(res_years, response_list[[res]]$aggregations$year_agg$buckets[[i]]$key)
res_total <- c(res_total,response_list[[res]]$aggregations$year_agg$buckets[[i]]$doc_count)
}
res_df <- data.frame(res_years, res_total)
colnames(res_df) <- c('years', res)
yearly_df <- merge(yearly_df, res_df, by="years", all=TRUE)
yearly_df[paste0(res,'_perc')] <- yearly_df[res] / yearly_df["total"]
rm(i, res_tot_years, res_years, res_total, res_df)
}
rm(res)
yearly_df$years <- as.Date(paste0(yearly_df$years, '-1-1'), '%Y-%m-%d')
